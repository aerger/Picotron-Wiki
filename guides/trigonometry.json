{
  "metadata" : {
    "authors" : ["kravohi", "aerger"],
    "version" : "0.4",
    "page_title" : "Trigonometry in Picotron"
  },
  "elements" : [
    {
      "text" : "This demo shows some useful \ntrigonometic relationships and how they \ncan be implemented in Picotron.\nScroll to the bottom of this page \nand press \"Run Demo\" to see them\nin action.",
      "type" : "label"
    },
    {
      "text" : "zoom = 40\noffset = -60\nfunction _draw()\n\tcls()\n\tpoke(0x4000, get(fetch(\"/system/fonts/p8.font\")))\n\tcamera(offset,offset)\n\tmx, my = mouse()\r\n\tmx += offset\n\tmy += offset\n\t\n\t-- Draw unit circle.\n\tcirc(0,0,zoom,1)\n\tlocal label_count = 8\r\n  \tfor ai=1, label_count do\r\n  \t\tlocal a = (ai/label_count) % 1\r\n  \t\tprint(\r\n  \t\t\ta, \r\n  \t\t\tcos(a)*(zoom+5)-9, \r\n  \t\t\tsin(a)*(zoom+5)-3,\r\n  \t\t\t5\r\n  \t\t)\r\n  \t\tprint(\r\n  \t\t\ta-1, \r\n  \t\t\tcos(a)*(zoom+5)-9, \r\n  \t\t\tsin(a)*(zoom+5)+3,\r\n  \t\t\t5\r\n  \t\t)\r\n  \tend\t\n  \tprint(\"+x\",zoom+15,0,26)\n  \tprint(\"-x\",-zoom-15,0,26)\n  \tprint(\"+y\",0,zoom+15,12)\r\n  \tprint(\"-y\",0,-zoom-15,12)\n\n  \t-- Draw cos() and sin()\n  \tlocal angle = atan2(mx,my)\n  \tlocal cos_x = cos(angle) * zoom\n  \tlocal sin_y = sin(angle) * zoom\n  \tline(0,sin_y,cos_x,sin_y,1)\r\n  \tline(cos_x,0,cos_x,sin_y,1)\n  \tline(0,0,0,sin_y,12)\n  \tline(0,0,cos_x,0,26)\n  \t\n \t-- Draw mouse\n \tcirc(mx,my,4,18)\r\n  \tline(0,0,mx,my,18)\n  \t\n  \t-- Draw normalized vector\n  \tlocal dist = sqrt(mx*mx + my*my)\n  \tline(0,0,mx/dist*zoom,my/dist*zoom,8)\r\t\n  \t\n  \t-- Draw the values\n  \tlocal x = -offset+30\n  \tlocal y = offset\n  \tprint(\"distance: \"..dist/zoom,x,y,18)\n  \ty += 8\n  \tprint(\"angle = atan2(mouse_x, mouse_y)\",x,y,6)\r\n  \ty += 8\n  \tprint(\"angle: \"..angle,x,y,6)\r\n  \ty += 8\n\tprint(\"cos(angle): \"..cos(angle),x,y,26)\n\ty += 8\n\tprint(\"sin(angle): \"..sin(angle),x,y,12)\n\ty += 8\r\n\tprint(\"normalized_mx = mouse_x / distance\",x,y,8)\r\n\ty += 8\r\n\tprint(\"normalized_my = mouse_y / distance\",x,y,8)\n\ty += 8\r\n\tprint(\"normalized_mx = cos(angle)\",x,y,8)\r\n\ty += 8\r\n\tprint(\"normalized_my = sin(angle)\",x,y,8)\r\n\ty += 8\r\n\tprint(\"normalized_mx:\"..mx/dist,x,y,8)\r\n\ty += 8\r\n\tprint(\"normalized_my:\"..my/dist,x,y,8)\nend",
		"type" : "demo"
	}
  ]
}
